"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = exports.CodeHighlighter = void 0;
var _react = _interopRequireWildcard(require("react"));
var _reactNative = require("react-native");
var _reactSyntaxHighlighter = _interopRequireDefault(require("react-syntax-highlighter"));
var _trimNewlines = require("trim-newlines");
var _styles = require("./../utils/styles");
function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }
function _getRequireWildcardCache(nodeInterop) { if (typeof WeakMap !== "function") return null; var cacheBabelInterop = new WeakMap(); var cacheNodeInterop = new WeakMap(); return (_getRequireWildcardCache = function (nodeInterop) { return nodeInterop ? cacheNodeInterop : cacheBabelInterop; })(nodeInterop); }
function _interopRequireWildcard(obj, nodeInterop) { if (!nodeInterop && obj && obj.__esModule) { return obj; } if (obj === null || typeof obj !== "object" && typeof obj !== "function") { return { default: obj }; } var cache = _getRequireWildcardCache(nodeInterop); if (cache && cache.has(obj)) { return cache.get(obj); } var newObj = {}; var hasPropertyDescriptor = Object.defineProperty && Object.getOwnPropertyDescriptor; for (var key in obj) { if (key !== "default" && Object.prototype.hasOwnProperty.call(obj, key)) { var desc = hasPropertyDescriptor ? Object.getOwnPropertyDescriptor(obj, key) : null; if (desc && (desc.get || desc.set)) { Object.defineProperty(newObj, key, desc); } else { newObj[key] = obj[key]; } } } newObj.default = obj; if (cache) { cache.set(obj, newObj); } return newObj; }
function _extends() { _extends = Object.assign ? Object.assign.bind() : function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }
const CodeHighlighter = _ref => {
  let {
    children,
    textStyle,
    hljsStyle,
    scrollViewProps,
    containerStyle,
    ...rest
  } = _ref;
  const stylesheet = (0, _react.useMemo)(() => (0, _styles.getRNStylesFromHljsStyle)(hljsStyle), [hljsStyle]);
  const getStylesForNode = node => {
    const classes = node.properties?.className ?? [];
    return classes.map(c => stylesheet[c]).filter(c => !!c);
  };
  const renderNode = function (nodes) {
    let keyPrefix = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : "row";
    return nodes.reduce((acc, node, index) => {
      const keyPrefixWithIndex = `${keyPrefix}_${index}`;
      if (node.children) {
        const styles = _reactNative.StyleSheet.flatten([textStyle, {
          color: stylesheet.hljs?.color
        }, getStylesForNode(node)]);
        acc.push( /*#__PURE__*/_react.default.createElement(_reactNative.Text, {
          style: styles,
          key: keyPrefixWithIndex
        }, renderNode(node.children, `${keyPrefixWithIndex}_child`)));
      }
      if (node.value) {
        acc.push((0, _trimNewlines.trimNewlines)(String(node.value)));
      }
      return acc;
    }, []);
  };
  const renderer = props => {
    const {
      rows
    } = props;
    return /*#__PURE__*/_react.default.createElement(_reactNative.ScrollView, _extends({}, scrollViewProps, {
      horizontal: true,
      contentContainerStyle: [stylesheet.hljs, scrollViewProps?.contentContainerStyle, containerStyle]
    }), /*#__PURE__*/_react.default.createElement(_reactNative.View, null, renderNode(rows)));
  };
  return /*#__PURE__*/_react.default.createElement(_reactSyntaxHighlighter.default, _extends({}, rest, {
    renderer: renderer,
    CodeTag: _reactNative.View,
    PreTag: _reactNative.View,
    style: {},
    testID: "react-native-code-highlighter"
  }), children);
};
exports.CodeHighlighter = CodeHighlighter;
var _default = CodeHighlighter;
exports.default = _default;
//# sourceMappingURL=CodeHighlighter.js.map